name: Express

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Ubuntu Latest GCC",
              os: ubuntu-latest,
              artifact: "ubuntu_gcc.7z",
              build_type: "Release",
              cc: "gcc",
              cxx: "g++",
              archiver: "7z a",
              generators: "Ninja"
            }
          - {
              name: "Windows Latest MSVC",
              os: windows-latest,
              artifact: "windows_msvc.7z",
              build_type: "Release",
              cc: "cl",
              cxx: "cl",
              environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
              archiver: "7z a",
              generators: "Visual Studio 17 2022"
            }
          - {
              name: "MacOS Latest Clang",
              os: macos-latest,
              artifact: "macos_clang.7z",
              build_type: "Release",
              cc: "clang",
              cxx: "clang++",
              archiver: "7za a",
              generators: "Ninja"
            }
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.os, 'Ubuntu')
        run: |
          sudo apt-get -yq update
          sudo apt-get install -yq cmake ninja-build python3-pip
          cmake --version
          ninja --version
          gcc --version
          python3 --version
          pip3 --version
      - name: Install dependencies on Windows
        if: startsWith(matrix.config.os, 'Windows')
        run: |
          choco install ninja cmake python pip
          ninja --version
          cmake --version
          python3 --version
          pip3 --version
      - name: Install dependencies on MacOS
        if: startsWith(matrix.config.os, 'MacOS')
        run: |
          brew install p7zip cmake ninja python
          ninja --version
          cmake --version
          python3 --version
          pip3 --version
      - name: Configure
        run: |
          mkdir instdir
          cmake -S . -B . -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -G "${{ matrix.config.generators }}" -DCMAKE_INSTALL_PREFIX:PATH=instdir
      - name: Build
        shell: bash
        run: cmake --build . --config ${{ matrix.config.build_type }}
      - name: Test
        run: |
          pip3 install -r tests/mock-server/requirements.txt
          nohup python3 tests/mock-server/server.py &
          sleep 1
          ctest -V 